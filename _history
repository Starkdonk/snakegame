{"entries":[{"timestamp":1760495936534,"editorVersion":"2.0.59","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":131,"diffs":[[1,"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block>\n</xml>"]]}]},{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":2866,"diffs":[[1," "]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":179,"length1":41,"diffs":[[1,"        \"assets.json\"\n"]]},{"start1":208,"length1":31,"diffs":[[1,"    \"additionalFilePaths\": []\n"]]}]},{"type":"added","filename":"main.py","value":"\n"}]},{"timestamp":1760496544489,"editorVersion":"2.0.59","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":0,"diffs":[[1,"// 完整贪吃蛇（MakeCode Arcade JavaScript）\n// 控制：WASD 或 方向键\n// 规则：吃食物变长；撞墙/撞自己 Game Over\n\nscene.setBackgroundColor(7)\n\nconst SCREEN_W = 160\nconst SCREEN_H = 120\nconst STEP = 8\n\nlet dx = 1\nlet dy = 0\n\nlet snake: Sprite[] = []\nlet startX = 80\nlet startY = 60\nlet initLen = 5\n\n// 创建蛇\nfor (let i = 0; i < initLen; i++) {\n    const part = sprites.create(img`\n        . . . . .\n        . 2 2 2 .\n        . 2 2 2 .\n        . 2 2 2 .\n        . . . . .\n    `, SpriteKind.Player)\n    part.setPosition(startX - i * STEP, startY)\n    snake.push(part)\n}\n\n// 食物\nlet food = sprites.create(img`\n    . . . . .\n    . . 5 . .\n    . 5 5 5 .\n    . . 5 . .\n    . . . . .\n`, SpriteKind.Food)\n\nfunction randSnap(min: number, max: number) {\n    return Math.round(randint(min, max) / STEP) * STEP\n}\n\nfunction placeFood() {\n    while (true) {\n        const fx = randSnap(0, SCREEN_W - STEP)\n        const fy = randSnap(0, SCREEN_H - STEP)\n        let clash = false\n        for (const s of snake) {\n            if (s.x == fx && s.y == fy) { clash = true; break }\n        }\n        if (!clash) { food.setPosition(fx, fy); break }\n    }\n}\n\nplaceFood()\ninfo.setScore(0)\n\n// —— 控制（WASD/方向键都可用）——\ncontroller.up.onEvent(ControllerButtonEvent.Pressed, function () {\n    if (dy == 0) { dx = 0; dy = -1 }\n})\ncontroller.down.onEvent(ControllerButtonEvent.Pressed, function () {\n    if (dy == 0) { dx = 0; dy = 1 }\n})\ncontroller.left.onEvent(ControllerButtonEvent.Pressed, function () {\n    if (dx == 0) { dx = -1; dy = 0 }\n})\ncontroller.right.onEvent(ControllerButtonEvent.Pressed, function () {\n    if (dx == 0) { dx = 1; dy = 0 }\n})\n\n// —— 移动一步 —— \nfunction step() {\n    // 身体跟随\n    for (let i = snake.length - 1; i > 0; i--) {\n        snake[i].setPosition(snake[i - 1].x, snake[i - 1].y)\n    }\n\n    // 移动头\n    const head = snake[0]\n    const nx = head.x + dx * STEP\n    const ny = head.y + dy * STEP\n\n    // 撞墙结束\n    if (nx < 0 || nx > SCREEN_W - STEP || ny < 0 || ny > SCREEN_H - STEP) {\n        music.wawawawaa.play()\n        game.over(false)\n        return\n    }\n\n    head.setPosition(nx, ny)\n\n    // 自撞结束（不包含最后一节：上一行刚移动过）\n    for (let i = 1; i < snake.length; i++) {\n        if (head.x == snake[i].x && head.y == snake[i].y) {\n            music.wawawawaa.play()\n            game.over(false)\n            return\n        }\n    }\n\n    // 吃到食物：变长 + 加分 + 重新生成\n    if (head.x == food.x && head.y == food.y) {\n        const tail = snake[snake.length - 1]\n        const newPart = sprites.create(img`\n            . . . . .\n            . 2 2 2 .\n            . 2 2 2 .\n            . 2 2 2 .\n            . . . . .\n        `, SpriteKind.Player)\n        newPart.setPosition(tail.x, tail.y)\n        snake.push(newPart)\n        info.changeScoreBy(1)\n        music.baDing.play()\n        placeFood()\n    }\n}\n\n// 节奏（越小越快）\ngame.onUpdateInterval(160, step)\n\ngame.showLongText(\"WASD 或 方向键控制；吃食物变长；撞墙/自撞结束。\", DialogLayout.Top)\n"]]}]}]},{"timestamp":1760496568809,"editorVersion":"2.0.59","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":3027,"diffs":[[1,""]]}]}]},{"timestamp":1760497540501,"editorVersion":"2.0.59","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":84,"diffs":[[1,"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block></xml>"]]}]}]},{"timestamp":1760498268276,"editorVersion":"2.0.59","changes":[{"type":"edited","filename":"pxt.json","patch":[{"start1":227,"length1":44,"diffs":[[1,""]]}]},{"type":"added","filename":"test.ts","value":"// 在此处测试；当此软件包作为插件使用时，将不会编译此软件包。\n"}]}],"snapshots":[{"timestamp":1760495936533,"editorVersion":"2.0.59","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block>\n</xml>","main.ts":" ","README.md":" ","assets.json":"","pxt.json":"{\n    \"name\": \"snakegame\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1760498268276,"editorVersion":"2.0.59","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block></xml>","main.ts":"// Snake\n// Controls: WASD or Arrow Keys\n// Rules: Eat food to grow; self-collision = Game Over\n// World: Wrap-around edges\n\nscene.setBackgroundColor(7)\n\nconst SCREEN_W = 160\nconst SCREEN_H = 120\nconst STEP = 8\n\nlet dx = 1\nlet dy = 0\n\nlet snake: Sprite[] = []\nlet startX = 80\nlet startY = 60\nlet initLen = 2   // start length = 2\n\n// Create snake\nfor (let i = 0; i < initLen; i++) {\n    const part = sprites.create(img`\n        . . . . .\n        . 2 2 2 .\n        . 2 2 2 .\n        . 2 2 2 .\n        . . . . .\n    `, SpriteKind.Player)\n    part.setPosition(startX - i * STEP, startY)\n    snake.push(part)\n}\n\n// Food\nlet food = sprites.create(img`\n    . . . . .\n    . . 5 . .\n    . 5 5 5 .\n    . . 5 . .\n    . . . . .\n`, SpriteKind.Food)\n\nfunction snapToGrid(n: number) {\n    return Math.round(n / STEP) * STEP\n}\n\nfunction placeFood() {\n    while (true) {\n        const fx = snapToGrid(randint(0, SCREEN_W - STEP))\n        const fy = snapToGrid(randint(0, SCREEN_H - STEP))\n        let clash = false\n        for (const s of snake) {\n            if (s.x == fx && s.y == fy) { clash = true; break }\n        }\n        if (!clash) { food.setPosition(fx, fy); break }\n    }\n}\nplaceFood()\ninfo.setScore(0)\n\n// Controls (WASD/Arrows)\ncontroller.up.onEvent(ControllerButtonEvent.Pressed, function () {\n    if (dy == 0) { dx = 0; dy = -1 }\n})\ncontroller.down.onEvent(ControllerButtonEvent.Pressed, function () {\n    if (dy == 0) { dx = 0; dy = 1 }\n})\ncontroller.left.onEvent(ControllerButtonEvent.Pressed, function () {\n    if (dx == 0) { dx = -1; dy = 0 }\n})\ncontroller.right.onEvent(ControllerButtonEvent.Pressed, function () {\n    if (dx == 0) { dx = 1; dy = 0 }\n})\n\n// Move one step\nfunction step() {\n    // body follow\n    for (let i = snake.length - 1; i > 0; i--) {\n        snake[i].setPosition(snake[i - 1].x, snake[i - 1].y)\n    }\n\n    // move head with wrap-around\n    const head = snake[0]\n    let nx = head.x + dx * STEP\n    let ny = head.y + dy * STEP\n\n    // wrap horizontally\n    if (nx < 0) nx = SCREEN_W - STEP\n    else if (nx > SCREEN_W - STEP) nx = 0\n\n    // wrap vertically\n    if (ny < 0) ny = SCREEN_H - STEP\n    else if (ny > SCREEN_H - STEP) ny = 0\n\n    head.setPosition(nx, ny)\n\n    // self-collision\n    for (let i = 1; i < snake.length; i++) {\n        if (head.x == snake[i].x && head.y == snake[i].y) {\n            music.wawawawaa.play()\n            game.over(false)\n            return\n        }\n    }\n\n    // eat food\n    if (head.x == food.x && head.y == food.y) {\n        const tail = snake[snake.length - 1]\n        const newPart = sprites.create(img`\n            . . . . .\n            . 2 2 2 .\n            . 2 2 2 .\n            . 2 2 2 .\n            . . . . .\n        `, SpriteKind.Player)\n        newPart.setPosition(tail.x, tail.y)\n        snake.push(newPart)\n        info.changeScoreBy(1)\n        music.baDing.play()\n        placeFood()\n    }\n}\n\ngame.onUpdateInterval(160, step)\n\ngame.showLongText(\"WASD/Arrows to move. Wrap-around world. Eat food to grow. Self-hit ends the game.\", DialogLayout.Top)","README.md":" ","assets.json":"","main.py":"\n","pxt.json":"{\n    \"name\": \"snakegame\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1760498268285}